{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olive\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\my-scheduler\\\\Frontend\\\\src\\\\components\\\\AppointmentPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Scheduler from \"./Scheduler\";\nimport DaysList from \"./DaysList\";\nimport Employee from \"./Employee\";\nimport Services from \"./Services\";\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppointmentPage() {\n  _s();\n  const [data, setData] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [employee, setEmployee] = useState(\"\");\n  const [service, setService] = useState(\"\");\n  const [showMarcarButton, setShowMarcarButton] = useState(false);\n  const [currentPage, setCurrentPage] = useState(\"Service\");\n  const {\n    companyId\n  } = useParams();\n  const nextPage = () => {\n    switch (currentPage) {\n      case \"Service\":\n        setCurrentPage(\"Employee\");\n        break;\n      case \"Employee\":\n        setCurrentPage(\"DayList\");\n        break;\n      case \"DayList\":\n        setShowMarcarButton(true);\n        setCurrentPage(\"Scheduler\");\n        break;\n      default:\n        break;\n    }\n  };\n  const sendAppointment = () => {\n    let dados = JSON.stringify({\n      \"date\": day,\n      \"time\": data,\n      \"employee\": employee,\n      \"client\": 1,\n      \"service\": service\n    });\n    console.log(dados);\n    let config = {\n      method: 'post',\n      maxBodyLength: Infinity,\n      url: 'http://localhost:8000/my_scheduler_api/appointment',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dados\n    };\n    axios.request(config).then(response => {\n      console.log(JSON.stringify(response.data));\n    }).catch(error => {\n      console.log(error);\n    });\n    setCurrentPage(\"Service\");\n  };\n  const prevPage = () => {\n    switch (currentPage) {\n      case \"Scheduler\":\n        setCurrentPage(\"DayList\");\n        break;\n      case \"DayList\":\n        setCurrentPage(\"Employee\");\n        break;\n      case \"Employee\":\n        setCurrentPage(\"Service\");\n        break;\n      default:\n        break;\n    }\n  };\n  const renderComponent = () => {\n    switch (currentPage) {\n      case \"Service\":\n        return /*#__PURE__*/_jsxDEV(Services, {\n          setService: setService,\n          companyIdId: companyId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 18\n        }, this);\n      case \"Employee\":\n        return /*#__PURE__*/_jsxDEV(Employee, {\n          setEmployee: setEmployee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 18\n        }, this);\n      case \"DayList\":\n        return /*#__PURE__*/_jsxDEV(DaysList, {\n          setDay: setDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 18\n        }, this);\n      case \"Scheduler\":\n        return /*#__PURE__*/_jsxDEV(Scheduler, {\n          employee: employee,\n          horaInicio: \"08:00\",\n          horaFim: \"13:30\",\n          intervalo: \"30\",\n          horaInicioTarde: \"16:00\",\n          horaFimTarde: \"22:00\",\n          setData: setData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderComponent(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prevPage,\n      disabled: currentPage === \"Service\",\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), currentPage !== 'Scheduler' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextPage,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }, this), showMarcarButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendAppointment,\n      children: \"Marcar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 30\n    }, this), \"dia:\", day, \" data: \", data, \" employee: \", employee, \"  service: \", service, /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/appointment/1\",\n      children: \"View Client Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 7\n  }, this);\n}\n_s(AppointmentPage, \"SLk+BULY4RM3K/J/SSx+vT0KoFs=\", false, function () {\n  return [useParams];\n});\n_c = AppointmentPage;\nvar _c;\n$RefreshReg$(_c, \"AppointmentPage\");","map":{"version":3,"names":["React","useState","Scheduler","DaysList","Employee","Services","axios","useParams","Link","jsxDEV","_jsxDEV","AppointmentPage","_s","data","setData","day","setDay","employee","setEmployee","service","setService","showMarcarButton","setShowMarcarButton","currentPage","setCurrentPage","companyId","nextPage","sendAppointment","dados","JSON","stringify","console","log","config","method","maxBodyLength","Infinity","url","headers","request","then","response","catch","error","prevPage","renderComponent","companyIdId","fileName","_jsxFileName","lineNumber","columnNumber","horaInicio","horaFim","intervalo","horaInicioTarde","horaFimTarde","children","onClick","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/olive/OneDrive/Área de Trabalho/my-scheduler/Frontend/src/components/AppointmentPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Scheduler from \"./Scheduler\";\r\nimport DaysList from \"./DaysList\";\r\nimport Employee from \"./Employee\";\r\nimport Services from \"./Services\";\r\nimport axios from \"axios\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function AppointmentPage() {\r\n    const [data, setData] = useState(\"\");\r\n    const [day, setDay] = useState(\"\");\r\n    const [employee,setEmployee] = useState(\"\")\r\n    const [service,setService] = useState(\"\")\r\n    const [showMarcarButton, setShowMarcarButton] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(\"Service\");\r\n    const { companyId } = useParams();\r\n  \r\n    const nextPage = () => {\r\n      switch (currentPage) {\r\n        case \"Service\":\r\n          setCurrentPage(\"Employee\");\r\n          break;\r\n        case \"Employee\":\r\n          setCurrentPage(\"DayList\");\r\n          break;\r\n        case \"DayList\":\r\n          setShowMarcarButton(true);\r\n          setCurrentPage(\"Scheduler\");\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  \r\n    const sendAppointment = () => {\r\n      let dados = JSON.stringify({\r\n        \"date\": day,\r\n        \"time\": data,\r\n        \"employee\": employee,\r\n        \"client\": 1,\r\n        \"service\": service\r\n        \r\n      });\r\n      console.log(dados)\r\n      \r\n      let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url:'http://localhost:8000/my_scheduler_api/appointment',\r\n        headers: { \r\n          'Content-Type': 'application/json'\r\n        },\r\n        data : dados\r\n      };\r\n      \r\n      axios.request(config)\r\n      .then((response) => {\r\n        console.log(JSON.stringify(response.data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n      setCurrentPage(\"Service\")\r\n    }\r\n  \r\n    const prevPage = () => {\r\n      switch (currentPage) {\r\n        case \"Scheduler\":\r\n          setCurrentPage(\"DayList\");\r\n          break;\r\n        case \"DayList\":\r\n          setCurrentPage(\"Employee\");\r\n          break;\r\n        case \"Employee\":\r\n          setCurrentPage(\"Service\");\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  \r\n    const renderComponent = () => {\r\n      switch (currentPage) {\r\n        case \"Service\":\r\n          return <Services setService={setService} companyIdId={companyId}/>;\r\n        case \"Employee\":\r\n          return <Employee setEmployee={setEmployee} />;\r\n        case \"DayList\":\r\n          return <DaysList setDay={setDay} />;\r\n        case \"Scheduler\":\r\n          return (\r\n            <Scheduler\r\n              employee={employee}\r\n              horaInicio=\"08:00\"\r\n              horaFim=\"13:30\"\r\n              intervalo=\"30\"\r\n              horaInicioTarde=\"16:00\"\r\n              horaFimTarde=\"22:00\"\r\n              setData={setData}\r\n            />\r\n          );\r\n        default:\r\n          return null;\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        {renderComponent()}\r\n        <button onClick={prevPage} disabled={currentPage === \"Service\"}>\r\n          Previous\r\n        </button>\r\n        {currentPage !== 'Scheduler' && <button onClick={nextPage}>Next</button>}\r\n        {showMarcarButton && <button onClick={sendAppointment}>Marcar</button>}\r\n        dia:{day} data: {data} employee: {employee}  service: {service}\r\n        <Link to=\"/appointment/1\">View Client Appointments</Link>\r\n        {/* <div>\r\n          <h2>Minhas marcações:</h2>\r\n          <div>\r\n            <ClientAppointments clientId={1}/>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}